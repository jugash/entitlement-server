# Default values for keycloak-entitlements-service

imagePullSecrets: []
replicaCount: 1

image:
  repository: quay.io/user/keycloak-entitlements-service
  pullPolicy: IfNotPresent
  tag: "0.0.1-SNAPSHOT"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

route:
  enabled: true
  name: keycloak-entitlements-service
  targetPort: 8080
  annotations: {}
  host: ""

configmap:
  enabled: true
  name: app-config
  data:
    application.yml: |
      server:
        port: 8080
      spring:
        security:
          oauth2:
            resourceserver:
              jwt:
                issuer-uri: http://keycloak:8080/realms/myrealm
        # No LDAP config needed in app; handled by Keycloak IdP
      management:
        endpoints:
          web:
            exposure:
              include: health,info

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}